Kata:

Description:
Create a function that transforms any positive number to a string representing the number in words. The function should work for all numbers between 0 and 999999.

Examples
number2words(0)  ==>  "zero"
number2words(1)  ==>  "one"
number2words(9)  ==>  "nine"
number2words(10)  ==>  "ten"
number2words(17)  ==>  "seventeen"
number2words(20)  ==>  "twenty"
number2words(21)  ==>  "twenty-one"
number2words(45)  ==>  "forty-five"
number2words(80)  ==>  "eighty"
number2words(99)  ==>  "ninety-nine"
number2words(100)  ==>  "one hundred"
number2words(301)  ==>  "three hundred one"
number2words(799)  ==>  "seven hundred ninety-nine"
number2words(800)  ==>  "eight hundred"
number2words(950)  ==>  "nine hundred fifty"
number2words(1000)  ==>  "one thousand"
number2words(1002)  ==>  "one thousand two"
number2words(3051)  ==>  "three thousand fifty-one"
number2words(7200)  ==>  "seven thousand two hundred"
number2words(7219)  ==>  "seven thousand two hundred nineteen"
number2words(8330)  ==>  "eight thousand three hundred thirty"
number2words(99999)  ==>  "ninety-nine thousand nine hundred ninety-nine"
number2words(888888)  ==>  "eight hundred eighty-eight thousand eight hundred eighty-eight"

My Solution:

function number2words(n){
  if (n === 0) return 'zero'
  var allDigits = n.toString().split('').map(Number)
  var numbers = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten',
                 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen']
  var tens = ['0','ten', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety']
  console.log(n)
        console.log(allDigits)
  function secondPart(m) {
    var digits = m.toString().split('').map(Number);
    console.log(digits)
    if (m <= 19) {
      return numbers[m];
    } else if (m < 100) {
      return digits[1] === 0 ? tens[digits[0]] : tens[digits[0]] + '-' + numbers[digits[1]]
    } else if (m < 1000) {
      if (digits[1] === 0 && digits[2] === 0) {
        return numbers[digits[0]] + ' hundred' 
      } else if (digits[2] === 0) {
        return numbers[digits[0]] + ' hundred ' + tens[digits[1]];
      } else if (digits[1] === 0) {
        return numbers[digits[0]] + ' hundred ' + numbers[digits[2]];
      } else if (digits[1] <= 1) {
        return numbers[digits[0]] + ' hundred ' + numbers[digits[2] + 10];
      } else {
        return numbers[digits[0]] + ' hundred ' + tens[digits[1]] + '-' + numbers[digits[2]];
      }
    }
  }
  
  function firstPart(k) {
    
  }
  
  /// LOOOOOOOOOOOOOOOL
  if (n < 1000) {
    return secondPart(n);
  } else {
    var secondN = allDigits[allDigits.length - 1]
                  + allDigits[allDigits.length - 2] * 10
                  + allDigits[allDigits.length - 3] * 100;
    console.log((n - secondN) / 1000)
    var first = secondPart((n - secondN) / 1000);
    console.log(secondN)
    var second = secondPart(secondN);
    console.log(first + ' thousand ' + second)
    return (first + ' thousand ' + second).trim();
  }
}
