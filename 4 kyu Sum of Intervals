Kata:

Description:
Write a function called sumIntervals/sum_intervals() that accepts an array of intervals, and returns the sum of all the interval lengths. Overlapping intervals should only be counted once.

Intervals
Intervals are represented by a pair of integers in the form of an array. The first value of the interval will always be less than the second value. Interval example: [1, 5] is an interval from 1 to 5. The length of this interval is 4.

Overlapping Intervals
List containing overlapping intervals:

[
   [1,4],
   [7, 10],
   [3, 5]
]
The sum of the lengths of these intervals is 7. Since [1, 4] and [3, 5] overlap, we can treat the interval as [1, 5], which has a length of 4.

Examples:
sumIntervals( [
   [1,2],
   [6, 10],
   [11, 15]
] ); // => 9

sumIntervals( [
   [1,4],
   [7, 10],
   [3, 5]
] ); // => 7

sumIntervals( [
   [1,5],
   [10, 20],
   [1, 6],
   [16, 19],
   [5, 11]
] ); // => 19

MY sOL:

function sumIntervals(intervals){
  var final = [];
  var add = true;
  var second = false;
  
  for (var i = 0; i < intervals.length; i++) {
    add = true
    second = false;
    for (var j = 0; j < final.length; j++) {
      console.log('LOLOLOLOLOLOLO')
      console.log(final)
      console.log(final[j], intervals[i])
      
      if (intervals[i][0] >= final[j][0] && intervals[i][0] <= final[j][1] &&
          intervals[i][1] >= final[j][1]) {
        final[j][1] = intervals[i][1];
        add = false;
        second = true;
      } else if (intervals[i][1] >= final[j][0] && intervals[i][1] <= final[j][1] &&
                  intervals[i][0] <= final[j][0]) {
        final[j][0] = intervals[i][0];
        add = false;
        second = true;
      } else if (intervals[i][0] <= final[j][0] && intervals[i][1] >= final[j][1]) {
        final[j][0] = intervals[i][0];
        final[j][1] = intervals[i][1];
        if (second) {
          final.splice(j, 1);
        }
        second = true;
        add = false;
      } else if (final[j][0] <= intervals[i][0] && intervals[i][1] <= final[j][1]) {
        add = false;
        
      } 
      
      
    }
    if (add) final.push(intervals[i]);
  }
  console.log(final)
  var sum = 0
  for (var i = 0; i < final.length; i++) {
    for (var j = i+1; j < final.length; j++) {
      if (final[j][0] >= final[i][0] && final[j][1] <= final[i][1]) {
        final.splice(j, 1);
      }
    }
    sum += final[i][1] - final[i][0];
  }
  console.log(final)
  return sum;
}
