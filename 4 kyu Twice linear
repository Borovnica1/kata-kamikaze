Kata:

Description:
Consider a sequence u where u is defined as follows:

The number u(0) = 1 is the first one in u.
For each x in u, then y = 2 * x + 1 and z = 3 * x + 1 must be in u too.
There are no other numbers in u.
Example:
u = [1, 3, 4, 7, 9, 10, 13, 15, 19, 21, 22, 27, ...]

1 gives 3 and 4, then 3 gives 7 and 10, 4 gives 9 and 13, then 7 gives 15 and 22 and so on...

Task:
Given parameter n the function dbl_linear (or dblLinear...) returns the element u(n) of the ordered sequence u (ordered with < so there are no duplicates) .

Example:
dbl_linear(10) should return 22

Note:
Focus attention on efficiency

Sol:

function dblLinear(n) {
  var u = [1]
  var x = 0,
      i = 0,
      j = 0,
      y = [],
      z = [],
      y2 = 0,
      z2 = 0;
  while (u.length <= n) {
    y.push(2 * u[x] + 1)
    z.push(3 * u[x] + 1)

    if (y[i] < z[j]) {
      u.push(y[i])
      i++
    } else if (z[j] < y[i]) {
      u.push(z[j])
      j++
    } else {
      u.push(z[j]);
      i++;
      j++;
    }
    x++
  }
  console.log('hihiihihih')
  console.log(y[i], z[j])
  console.log(y, z)
  console.log(u)
  return u[n]
}
