Kata:

Description:
Telephone numbers
When you start to enter a phone number, the smartphone proposes you some choices of possible phone numbers from your repertory.

The goal of this kata is to save the phone numbers by keeping in common the same parts of the phone numbers thus reducing the total size of the repertory.

Goal
Your function will take in arguments an array of phone numbers. (Of at least one element); A phone number contains at least one digit and can contains up to 20 digits.

You must return the number of elements your graph contains.

You must not modify the input array.

Example :
We have the following phone numbers : 0123456789 0123987654 0123987456 2365498756 2365498765

This gives the following graphs :

               4 - 5 - 6 - 7 - 8 - 9           
0 - 1 - 2 - 3 <
                \            4 - 5 - 6
                  9 - 8 - 7 < 
                             6 - 5 - 4
  
                               6 - 5
2 - 3 - 6 - 5 - 4 - 9 - 8 - 7 <
                               5 - 6
The graphs contains 31 elements. So the function must return 31



My Sol:

function Node(digit){
  this.value = digit;
  this.numbers = [];
}

let count = 0;
function phoneNumber(phoneNumbers){
  count = 0;
  const graphs = [];
  let currArr = graphs;
  phoneNumbers.forEach(number => {
    currArr = graphs;
      number.split('').forEach(digit => {
      let index = currArr.findIndex(n => n.value == digit);
      if (index == -1) {
        currArr.push(new Node(digit));
        currArr = currArr[currArr.length-1].numbers
      } else {
        currArr = currArr[index].numbers;
      }
    })
  })
  for (let n of graphs) {
    traverseGraph(n)
    count++;
  }
  return count;
}


function traverseGraph(n) {
  for (let m of n.numbers) {
    traverseGraph(m)
    count++;
  }
}
