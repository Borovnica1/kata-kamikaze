Kata:

Description:
Your task in order to complete this Kata is to write a function which formats a duration, given as a number of seconds, in a human-friendly way.

The function must accept a non-negative integer. If it is zero, it just returns "now". Otherwise, the duration is expressed as a combination of years, days, hours, minutes and seconds.

It is much easier to understand with an example:

formatDuration(62)    // returns "1 minute and 2 seconds"
formatDuration(3662)  // returns "1 hour, 1 minute and 2 seconds"
For the purpose of this Kata, a year is 365 days and a day is 24 hours.

Note that spaces are important.

Detailed rules
The resulting expression is made of components like 4 seconds, 1 year, etc. In general, a positive integer and one of the valid units of time, separated by a space. The unit of time is used in plural if the integer is greater than 1.

The components are separated by a comma and a space (", "). Except the last component, which is separated by " and ", just like it would be written in English.

A more significant units of time will occur before than a least significant one. Therefore, 1 second and 1 year is not correct, but 1 year and 1 second is.

Different components have different unit of times. So there is not repeated units like in 5 seconds and 1 second.

A component will not appear at all if its value happens to be zero. Hence, 1 minute and 0 seconds is not valid, but it should be just 1 minute.

A unit of time must be used "as much as possible". It means that the function should not return 61 seconds, but 1 minute and 1 second instead. Formally, the duration specified by of a component must not be greater than any valid more significant unit of time.



My Solution:

function formatDuration (seconds) {
  if (seconds === 0) return 'now';
  
  var sentance = '',
      sec = 0,
      min = 0,
      hour = 0,
      day = 0,
      years = 0,
      component = 0,
      componentMax = 0,
      componentStr = '',
      plural = '';
  
  sec = seconds % 60;
  min = ((seconds % 3600) - sec) / 60;
  hour = ((seconds - sec - (min * 60)) / 3600) % 24;
  day = (((seconds - sec - (min * 60)) / 3600) - hour) / 24;
  while (day >= 365) {
    day -= 365;
    years++;
  }
  
  if (sec > 0) component += 1;
  if (min > 0) component += 1;
  if (hour > 0) component += 1;
  if (day > 0) component += 1;
  if (years > 0) component += 1;
  componentMax = component;
  
  if (years > 0) {
    if (years > 1) plural = 's';
    sentance += years + ' year' + plural;
    plural = '';
    component -= 1;
  }
  if (day > 0) {
    if (day > 1) plural = 's';
    if (component === 1 && componentMax > 1) {
      componentStr = ' and '
    } else if (component < componentMax) {
      componentStr = ', '
    }
    sentance += componentStr + day + ' day' + plural;
    plural = '';
    componentStr = '';
    component -= 1;
  }
  if (hour > 0) {
    if (hour > 1) plural = 's';
    if (component === 1 && componentMax > 1) {
      componentStr = ' and '
    } else if (component < componentMax) {
      componentStr = ', '
    }
    sentance += componentStr + hour + ' hour' + plural;
    plural = '';
    componentStr = '';
    component -= 1;
  }
  if (min > 0) {
    if (min > 1) plural = 's';
    if (component === 1 && componentMax > 1) {
      componentStr = ' and '
    } else if (component < componentMax) {
      componentStr = ', '
    }
    sentance += componentStr + min + ' minute' + plural;
    plural = '';
    componentStr = '';
    component -= 1;
  }
  if (sec > 0) {
    if (sec > 1) plural = 's';
    if (component === 1 && componentMax > 1) {
      componentStr = ' and '
    } else if (component < componentMax) {
      componentStr = ', '
    }
    sentance += componentStr + sec + ' second' + plural;
    plural = '';
    componentStr = '';
    component -= 1;
  }
  return sentance;
}
