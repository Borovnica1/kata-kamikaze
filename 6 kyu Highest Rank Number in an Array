Kata:

Description:
Complete the method which returns the number which is most frequent in the given input array. If there is a tie for most frequent number, return the largest number among them.

Note: no empty arrays will be given.

Examples
[12, 10, 8, 12, 7, 6, 4, 10, 12]              -->  12
[12, 10, 8, 12, 7, 6, 4, 10, 12, 10]          -->  12
[12, 10, 8, 8, 3, 3, 3, 3, 2, 4, 10, 12, 10]  -->   3

My Solution:

function highestRank(arr){
  arr.sort(function(a, b) {
    return a - b;
  });
  var sum = [],
      divide = [],
      next = 0,
      count = 1,
      number = 0;
  
  for (var i = 0; i < arr.length; i++) {
    next = i + 1;
    if (arr[i] == arr[next]) {
      number += arr[i];
      count ++;
    } else if (count > 1) {
      number += arr[i];
      sum.push(number);
      divide.push(count);
      count = 1;
      number = 0;
    }
  }
  
  var indexOfMax = divide.lastIndexOf(Math.max(...divide));
  return sum[indexOfMax] / divide[indexOfMax];
  
  console.log(indexOfMax);
  console.log(sum);
  console.log(divide);
  console.log(arr);
}
