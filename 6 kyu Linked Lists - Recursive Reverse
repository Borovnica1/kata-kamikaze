Kata:

Description:
Linked Lists - Recursive Reverse

Write a Recursive Reverse() function that recursively reverses a linked list. You may want to use a nested function for the recursive calls.

var list = 2 -> 1 -> 3 -> 6 -> 5 -> null
reverse(list) === 5 -> 6 -> 3 -> 1 -> 2 -> null


Soll:

function Node(data, next) {
  this.data = data === undefined ? null : data;
  this.next = next;
}

function reverse(head) {
  if (head == null) return head
  head = makeNodes(head, null)
  console.log('XXXXXXXXXXXXX')
  console.log(head)
  return head
  function makeNodes(head, newHead) {
    console.log('LLLLLLLLLLLLLL')
    if (head == null) return newHead;
    console.log('CCCCCCCCCCCCC')
    var next = head.next;
    head.next = newHead;
    newHead = head;
    head = next;
    console.log(next)
    
    return makeNodes(head, newHead)
    
  }
}
